{"version":3,"sources":["Components/AddCategory.js","helpers/getGifts.js","Components/GiftGridItem.js","Components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","console","log","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAsB9C,OAAS,sBACAC,SAdY,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMb,SAGL,uBACMO,KAAO,OACbC,MAAUT,EACVU,SAxBsB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAiBbM,GAjBa,4CAAH,sDCEPO,EAAe,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGtC,OADAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAEpB,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAMjB,EAAKkB,IAAMR,IACtB,4BAAIA,QCHHS,EAAW,SAAC,GAAiB,IAAfrB,EAAc,EAAdA,SAAc,ECHb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAE/BqB,KAAK,GACLe,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OAnBAC,qBAAW,WAEP1B,EAAQC,GAAU0B,MAAK,SAAAC,GAEnBC,YAAW,WAEPJ,EAAU,CACNjB,KAAMoB,EACNL,SAAS,MAGd,UAIR,CAACtB,IAIGuB,EDpBiBM,CAAc7B,GAA/BO,EAJ8B,EAI9BA,KAAMe,EAJwB,EAIxBA,QAKb,OAEI,qCACA,6BAAKtB,IAEJsB,EAAU,wCAAgB,KAE3B,qBAAKJ,UAAU,YAAf,SAGQX,EAAKE,KAAI,SAAAC,GAAG,OAEN,cAAC,EAAD,eAEUA,GADGA,EAAIC,aEvB1BmB,EAAgB,WAAO,IAAD,EAEK5C,mBAAS,CAAC,cAFf,mBAExB6C,EAFwB,KAEZ9C,EAFY,KAW/B,OACI,gCACI,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACf,cAAC,EAAD,CAEQA,SAAWA,GADJA,Y,MCpB3CgC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6e3ab2e8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => { //Recibe el evento, que el evento contiene el valor del input actual para poder camnbiarlo\r\n\r\n        setInputValue(e.target.value); //Se cambia el estado del input actual\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault(); //Evitamos que se refresque el navegador\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return ( <\r\n        form onSubmit = { handleSubmit } >\r\n\r\n        <\r\n        input type = \"text\"\r\n        value = { inputValue } //Este es el valor inicial\r\n        onChange = { handleInputChange } //Con la funcion se modifica el valor inicial\r\n        />\r\n\r\n        <\r\n        /form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=AhfmixyWdcCILgoRjfjnE6ZRQMMDiATc&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log({id, title, url});\r\n    return (\r\n        <div className=\"card\">\r\n            <img src= {url} alt={ title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n//import { getGifs } from '../helpers/getGifts';\r\n\r\nexport const GiftGrid = ( {category}) => {\r\n\r\n   \r\n\r\n    const {data, loading} = useFetchGifs( category );\r\n\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n        <h3>{category}</h3>\r\n        \r\n        {loading ? <p>Loading</p>: null}\r\n            \r\n        <div className=\"card-grid\">\r\n            \r\n            {  \r\n                data.map(img=>(\r\n                       \r\n                      <GiftGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                      \r\n                      />\r\n                    \r\n                 ) )\r\n\r\n                \r\n                }\r\n            \r\n        </div>\r\n    \r\n    \r\n        \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifts';\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs(category).then(imgs =>{\r\n\r\n            setTimeout(() => {\r\n                \r\n                setstate ({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            }, 3000);\r\n            \r\n        })\r\n        \r\n    }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GiftGrid } from './Components/GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n   \r\n    /*const handleAdd = () => {\r\n\r\n        //setCategories([...categories, 'HunterXHunter']);\r\n        setCategories( cats => [...cats, 'HunterXHunter']);//En esta parte recibe el cats que es el estado anterior del arreglo, y luego le agrega el nuevo elemento al final\r\n    }\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr></hr>\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                            <GiftGrid \r\n                                    key = {category}\r\n                                    category={ category} />\r\n                        )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GiftExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}